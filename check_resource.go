package resource

import (
	"regexp"

	"github.com/opencontrol/nvd-cve-resource/nvd_cve"
)

type CheckCommand struct {
	cves *nvdCVE.RSS
}

func NewCheckCommand() *CheckCommand {
	return &CheckCommand{}
}

func (check *CheckCommand) Run(checkRequest CheckRequest) ([]Version, error) {
	var newVersions []Version
	rssData, err := nvdCVE.GetRSSData()
	if err != nil {
		return newVersions, err
	}
	if len(rssData.Items) == 0 {
		return newVersions, nil
	}
	if rssData.Items[0].Title == checkRequest.Version.Tag {
		return newVersions, nil
	}

	filter, err := regexp.Compile(checkRequest.Source.Filter)
	if err != nil {
		return newVersions, nil
	}

	if checkRequest.Version.Tag == "" && filter.MatchString(rssData.Items[0].Title) {
		newVersions = append(newVersions, Version{Tag: rssData.Items[0].Title})
		return newVersions, nil
	}
	for _, version := range rssData.Items {
		if filter.MatchString(version.Title) {
			newVersions = append(newVersions, Version{Tag: version.Title})
			if version.Title == checkRequest.Version.Tag {
				break
			}
		}
	}
	return newVersions, nil
}
